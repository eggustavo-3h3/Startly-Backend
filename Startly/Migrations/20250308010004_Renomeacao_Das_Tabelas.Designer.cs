// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Startly.Infra.Data.Context;

#nullable disable

namespace Startly.Migrations
{
    [DbContext(typeof(StartlyContext))]
    [Migration("20250308010004_Renomeacao_Das_Tabelas")]
    partial class Renomeacao_Das_Tabelas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Startly.Domain.Entities.Atuacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("TB_Atuacao", (string)null);
                });

            modelBuilder.Entity("Startly.Domain.Entities.Startup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CNPJ")
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("EnumTicket")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EnumTipoDeAtendimento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Municipio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<int>("QuantidadeFuncionario")
                        .HasColumnType("int");

                    b.Property<string>("ResponsavelCadastro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SiteStartup")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("metas")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("varchar(3000)");

                    b.HasKey("Id");

                    b.ToTable("TB_Startup", (string)null);
                });

            modelBuilder.Entity("Startly.Domain.Entities.StartupAtuacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AtuacaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("StartupId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("AtuacaoId");

                    b.HasIndex("StartupId");

                    b.ToTable("TB_StartupAtuacao", (string)null);
                });

            modelBuilder.Entity("Startly.Domain.Entities.StartupContato", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Contato")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<Guid>("StartupId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("StartupId");

                    b.ToTable("TB_StartupContato", (string)null);
                });

            modelBuilder.Entity("Startly.Domain.Entities.StartupImagem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("StartupId")
                        .HasColumnType("char(36)");

                    b.Property<string>("TipoImagem")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("StartupId");

                    b.ToTable("TB_StartupImagens", (string)null);
                });

            modelBuilder.Entity("Startly.Domain.Entities.StartupVideo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("LinkVideo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("StartupId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("StartupId");

                    b.ToTable("TB_StartupVideo", (string)null);
                });

            modelBuilder.Entity("Startly.Domain.Entities.StartupAtuacao", b =>
                {
                    b.HasOne("Startly.Domain.Entities.Atuacao", "Atuacao")
                        .WithMany()
                        .HasForeignKey("AtuacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Startly.Domain.Entities.Startup", "Startup")
                        .WithMany("Atuacoes")
                        .HasForeignKey("StartupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Atuacao");

                    b.Navigation("Startup");
                });

            modelBuilder.Entity("Startly.Domain.Entities.StartupContato", b =>
                {
                    b.HasOne("Startly.Domain.Entities.Startup", "Startup")
                        .WithMany("Contatos")
                        .HasForeignKey("StartupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Startup");
                });

            modelBuilder.Entity("Startly.Domain.Entities.StartupImagem", b =>
                {
                    b.HasOne("Startly.Domain.Entities.Startup", "Startup")
                        .WithMany("Imagens")
                        .HasForeignKey("StartupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Startup");
                });

            modelBuilder.Entity("Startly.Domain.Entities.StartupVideo", b =>
                {
                    b.HasOne("Startly.Domain.Entities.Startup", "Startup")
                        .WithMany("Videos")
                        .HasForeignKey("StartupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Startup");
                });

            modelBuilder.Entity("Startly.Domain.Entities.Startup", b =>
                {
                    b.Navigation("Atuacoes");

                    b.Navigation("Contatos");

                    b.Navigation("Imagens");

                    b.Navigation("Videos");
                });
#pragma warning restore 612, 618
        }
    }
}
